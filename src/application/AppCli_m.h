//
// Generated file, do not edit! Created by nedtool 4.6 from application/AppCli.msg.
//

#ifndef _APPCLI_M_H_
#define _APPCLI_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "inet/common/INETDefs.h"

#define APPCLI_CLI_SAP  0xf0
#define APPCLI_SRV_SAP  0xf1
// }}

/**
 * Class generated from <tt>application/AppCli.msg:29</tt> by nedtool.
 * <pre>
 * //
 * // Request packet sent by ~EtherAppCli. Contains the number of bytes to be
 * // sent back as response; if this value is greater than ~1400, the reply
 * // will consist of several Ethernet frames. See also ~EtherAppResp.
 * //
 * packet EtherAppPct
 * {
 *     string key;
 *     int nodeId;
 *     string macAddress;
 * }
 * </pre>
 */
class EtherAppPct : public ::cPacket
{
  protected:
    opp_string key_var;
    int nodeId_var;
    opp_string macAddress_var;

  private:
    void copy(const EtherAppPct& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EtherAppPct&);

  public:
    EtherAppPct(const char *name=NULL, int kind=0);
    EtherAppPct(const EtherAppPct& other);
    virtual ~EtherAppPct();
    EtherAppPct& operator=(const EtherAppPct& other);
    virtual EtherAppPct *dup() const {return new EtherAppPct(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getKey() const;
    virtual void setKey(const char * key);
    virtual int getNodeId() const;
    virtual void setNodeId(int nodeId);
    virtual const char * getMacAddress() const;
    virtual void setMacAddress(const char * macAddress);
};

inline void doPacking(cCommBuffer *b, EtherAppPct& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, EtherAppPct& obj) {obj.parsimUnpack(b);}


#endif // ifndef _APPCLI_M_H_

